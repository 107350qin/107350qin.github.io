(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{281:function(s,e,t){"use strict";t.r(e);var a=t(14),n=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"使用vuepress-github搭建静态网站"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用vuepress-github搭建静态网站"}},[s._v("#")]),s._v(" 使用vuepress+github搭建静态网站")]),s._v(" "),e("h2",{attrs:{id:"vuepress项目开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuepress项目开发"}},[s._v("#")]),s._v(" vuepress项目开发")]),s._v(" "),e("p",[s._v("这里参照"),e("a",{attrs:{href:"http://caibaojian.com/vuepress/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网"),e("OutboundLink")],1),s._v("一步步做就行，我这里关键记录一下部署过程。")]),s._v(" "),e("h2",{attrs:{id:"项目部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目部署"}},[s._v("#")]),s._v(" 项目部署")]),s._v(" "),e("h3",{attrs:{id:"仓库名称"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#仓库名称"}},[s._v("#")]),s._v(" 仓库名称")]),s._v(" "),e("p",[s._v("由于我们要使用GitHub的免费域名来部署网站，所以仓库名称就起成 "),e("code",[s._v("username.github.io")]),s._v("，这里的username是你的github的账号名。")]),s._v(" "),e("h3",{attrs:{id:"分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[s._v("#")]),s._v(" 分支")]),s._v(" "),e("p",[s._v("我们提交的源代码是"),e("strong",[s._v("master")]),s._v("分支，"),e("strong",[s._v("npm")]),s._v("编译之后的资源文件我们希望通过脚本push到另外一个分支，所以还要建一个分支，这里就叫做 "),e("strong",[s._v("gh-pages")]),s._v(" 吧！")]),s._v(" "),e("h3",{attrs:{id:"配置编译-推送脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置编译-推送脚本"}},[s._v("#")]),s._v(" 配置编译&推送脚本")]),s._v(" "),e("p",[s._v("在仓库下新建文件 "),e("code",[s._v(".github/workflows/gh-pages.yml")]),s._v("，内容如下：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("name: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup Node.js\n        uses: actions/setup-node@v2.4.0\n        with:\n          node-version: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'14.x'")]),s._v("\n      - name: Install dependencies\n        run: "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" ci\n      - name: Build site\n        run: "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run docs:build\n      - name: Deploy to GitHub Pages\n        uses: JamesIves/github-pages-deploy-action@4.1.1\n        with:\n          token: "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${{ secrets.VUEPRESS_SECRET }")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          branch: gh-pages\n          folder: docs/.vuepress/dist/\n")])])]),e("p",[s._v("表示当master分支有更新时，自动编译之后推送到gh-pages分支。其中重要的参数如下：")]),s._v(" "),e("ul",[e("li",[s._v("这里推送目录写编译之后的dist目录哈")]),s._v(" "),e("li",[s._v("token怎么获取？\n"),e("ul",[e("li",[s._v("github>setting>Developer settings>Personal access tokens>Tokens(classis)新建一个token，我这里就写一个叫做VUEPRESS_TOKEN，生成的token字符串自己保存一下哈，下一步要用。")]),s._v(" "),e("li",[s._v("仓库>Settings>Security>Secrets and variables>Actions>New repository secrets，我这里就写一个叫做VUEPRESS_SECRETS，对应的值写上面获得的token字符串。")]),s._v(" "),e("li",[s._v("于是乎，脚本文件中的token就可以写上"),e("code",[s._v("secrets.VUEPRESS_SECRET")])])])])]),s._v(" "),e("h3",{attrs:{id:"部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),e("p",[s._v("当主分支内容改变之后，查看部署分支gh-pages内容是否更新了，更新之后访问"),e("code",[s._v("username.github.io")]),s._v("即可！")]),s._v(" "),e("h3",{attrs:{id:"其他问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他问题"}},[s._v("#")]),s._v(" 其他问题")]),s._v(" "),e("ul",[e("li",[s._v("部署之后如果发现页面错乱，可能是config.js里配置的base不正确，把它去掉试试。")]),s._v(" "),e("li",[s._v("当部署失败时，尝试使用仓库下的 Actions 进行手动部署，这样可以看到日志，以便排查错误\n"),e("ul",[e("li",[s._v("如果看到deploy阶段Permisson之类的问题，可能是你的TOKEN配置的权限不够！")]),s._v(" "),e("li",[s._v("md文档编辑是不要用大括号，否则可能会编译失败。")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);